import moment from 'moment-timezone';
import fs from 'fs';
import os from 'os';
import pkg from '@whiskeysockets/baileys';
const { generateWAMessageFromContent, proto } = pkg;
import config from '../config.cjs';
import axios from 'axios';

// Get total memory and free memory in bytes
const totalMemoryBytes = os.totalmem();
const freeMemoryBytes = os.freemem();

// Define unit conversions
const byteToKB = 1 / 1024;
const byteToMB = byteToKB / 1024;
const byteToGB = byteToMB / 1024;

// Function to format bytes to a human-readable format
function formatBytes(bytes) {
  if (bytes >= Math.pow(1024, 3)) {
    return (bytes * byteToGB).toFixed(2) + ' GB';
  } else if (bytes >= Math.pow(1024, 2)) {
    return (bytes * byteToMB).toFixed(2) + ' MB';
  } else if (bytes >= 1024) {
    return (bytes * byteToKB).toFixed(2) + ' KB';
  } else {
    return bytes.toFixed(2) + ' bytes';
  }
}

// Bot Process Time
const uptime = process.uptime();
const day = Math.floor(uptime / (24 * 3600)); // Calculate days
const hours = Math.floor((uptime % (24 * 3600)) / 3600); // Calculate hours
const minutes = Math.floor((uptime % 3600) / 60); // Calculate minutes
const seconds = Math.floor(uptime % 60); // Calculate seconds

// Uptime
const uptimeMessage = `*I am alive now since ${day}d ${hours}h ${minutes}m ${seconds}s*`;
const runMessage = `*‚òÄÔ∏è ${day} Day*\n*üïê ${hours} Hour*\n*‚è∞ ${minutes} Minutes*\n*‚è±Ô∏è ${seconds} Seconds*\n`;

const xtime = moment.tz("Africa/Dar es Salaam").format("HH:mm:ss");
const xdate = moment.tz("Africa/Dar es Salaam").format("DD/MM/YYYY");
const time2 = moment().tz("Africa/Dar es Salaam").format("HH:mm:ss");
let pushwish = "";

if (time2 < "05:00:00") {
  pushwish = `Good Morning üåÑ`;
} else if (time2 < "11:00:00") {
  pushwish = `Good Morning üåÑ`;
} else if (time2 < "15:00:00") {
  pushwish = `Good Afternoon üåÖ`;
} else if (time2 < "18:00:00") {
  pushwish = `Good Evening üåÉ`;
} else if (time2 < "19:00:00") {
  pushwish = `Good Evening üåÉ`;
} else {
  pushwish = `Good Night üåå`;
}

const menu = async (m, Matrix) => {
  const prefix = config.PREFIX;
  const cmd = m.body.startsWith(prefix) ? m.body.slice(prefix.length).split(' ')[0].toLowerCase() : '';
  const mode = config.MODE === 'public' ? 'public' : 'private';
  const pref = config.PREFIX;

  const validCommands = ['list', 'help'];

  if (validCommands.includes(cmd)) {
    const mainMenu = `
    = `‚ï≠‚îÅ„Äî *SKIDDXDM* „Äï‚îÅ‚îà‚ä∑`
‚îÉ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚Äé‚îÉ‚îÇüçπ *_ùêîùê¨ùêûùê´ :_* ${pushname}
‚Äé‚îÉ‚îÇü¶Ñ *_ùêåùê®ùêùùêû :_* ${config.MODE}
‚Äé‚îÉ‚îÇü¶ã *_ùêèùê´ùêûùêüùê¢ùê± :_* ${config.PREFIX}
‚îÉ‚îÇüí´ *_ùêÇùê´ùêûùêöùê≠ùê®ùê´ :_* \`SKIDDBMX\`
‚Äé‚îÉ‚îÇ‚≠êÔ∏è *_ùêïùêûùê´ùê¨ùê¢ùê®ùêß :_* \`1.0.0\`
‚îÉ‚îÇü§ñ *_ùêÅùê®ùê≠-ùêçùêöùê¶ùêû :_* ${config.BOT_NAME}
‚îÉ‚îÇ„ÄΩÔ∏è *_ùêÄùê•ùê∞ùêöùê≤ùê¨ ùêéùêßùê•ùê¢ùêßùêû :_* ùêÄùêúùê≠ùê¢ùêØùêû
‚Äé‚îÉ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
> ${pushwish} *${m.pushName}*!

*\` ô·¥è·¥õ-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *.·¥†·¥á Äs…™·¥è…¥*
> ‚îú‚û© *.·¥ò Ä·¥á·¥ç…™·¥ú·¥ç*
> ‚îú‚û© *. Ä·¥á·¥ò·¥è*
> ‚îú‚û© *.·¥ç·¥á…¥·¥ú*
> ‚îú‚û© *.·¥Ñ ú·¥á·¥Ñ·¥ã·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á*
> ‚îú‚û© *.·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á*
> ‚îú‚û© *.·¥ç·¥è·¥Ö·¥á*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è·¥õ è·¥ò…™…¥…¢*
> ‚îú‚û© *.·¥Ä ü·¥°·¥Ä ès·¥è…¥ ü…™…¥·¥á*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥Ñ·¥è Ä·¥Ö…™…¥…¢*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥Ä·¥Ös·¥õ·¥Ä·¥õ·¥ús*
> ‚îú‚û© *.·¥Ä…¥·¥õ…™ ô·¥Ä·¥Ö*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥ès·¥õ…™·¥Ñ·¥ã·¥á Ä*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥ò ü è*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥Ä·¥Ñ·¥õ*
> ‚îú‚û© *.·¥Ä…¥·¥õ…™ ü…™…¥·¥ã*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*
> *Reply with the number (1-9)*`;

    // Function to get menu image
    const getMenuImage = async () => {
      if (config.MENU_IMAGE && config.MENU_IMAGE.trim() !== '') {
        try {
          const response = await axios.get(config.MENU_IMAGE, { responseType: 'arraybuffer' });
          return Buffer.from(response.data, 'binary');
        } catch (error) {
          console.error('Error fetching menu image from URL, falling back to local image:', error);
          return fs.readFileSync('https://files.catbox.moe/yhy4en.jpg');
        }
      } else {
        return fs.readFileSync('https://files.catbox.moe/yhy4en.jpg');
      }
    };

    const menuImage = await getMenuImage();

    const sentMessage = await Matrix.sendMessage(m.from, {
      image: menuImage,
      caption: mainMenu,
      contextInfo: {
        mentionedJid: [m.sender],
        forwardingScore: 999,
        isForwarded: true,
        forwardedNewsletterMessageInfo: {
          newsletterJid: '120363419079746471@newsletter',
          newsletterName: "SKIDDYBMX",
          serverMessageId: 143
        }
      }
    }, {
      quoted: m
    });

    // Send audio after sending the menu
    await Matrix.sendMessage(m.from, {
      audio: { url: 'https://files.catbox.moe/s7hcy1.m4a' },
      mimetype: 'audio/mp4',
      ptt: true
    }, { quoted: m });

    // Set up listener for menu selection
    Matrix.ev.on('messages.upsert', async (event) => {
      const receivedMessage = event.messages[0];
      if (!receivedMessage?.message?.extendedTextMessage) return;

      const receivedText = receivedMessage.message.extendedTextMessage.text.trim();
      if (receivedMessage.message.extendedTextMessage.contextInfo?.stanzaId !== sentMessage.key.id) return;

      let menuResponse;
      let menuTitle;
      
      switch (receivedText) {
        case "1":
          menuTitle = "Download Menu";
          menuResponse = `
*\`·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *.“ì ô*
> ‚îú‚û© *.…™…¥Íú±·¥õ·¥Ä*
> ‚îú‚û© *.·¥†…™·¥Ö·¥á·¥è*
> ‚îú‚û© *.…¢·¥Ö Ä…™·¥†·¥á*
> ‚îú‚û© *.·¥õ·¥°…™·¥õ·¥õ·¥á Ä*
> ‚îú‚û© *.·¥õ·¥õ*
> ‚îú‚û© *.·¥ç·¥á·¥Ö…™·¥Ä“ì…™ Ä·¥á*
> ‚îú‚û© *.·¥ò ü·¥Ä è*
> ‚îú‚û© *.s·¥è…¥…¢*
> ‚îú‚û© *.·¥†…™·¥Ö·¥á·¥è*
> ‚îú‚û© *.s·¥ò·¥è·¥õ…™Íú∞ è*
> ‚îú‚û© *.·¥†…™·¥Ö·¥á·¥è4*
> ‚îú‚û© *.…™·¥ç…¢*
> ‚îú‚û© *.L è Ä…™·¥Ñs*
> ‚îú‚û© *.·¥Ä·¥ò·¥ã*
> ‚îú‚û© *. ô·¥Ä…™s·¥Ñ·¥è·¥ò·¥á*
> ‚îú‚û© *.…¢…™…¥…™s…™s…™ ü·¥Ä*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*`;
          break;
          
        case "2":
          menuTitle = "Converter Menu";
          menuResponse = `
*\`·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *.s·¥õ…™·¥Ñ·¥ã·¥á Ä*
> ‚îú‚û© *.·¥õ·¥Ä·¥ã·¥á*
> ‚îú‚û© *.·¥õ Ä·¥õ*
> ‚îú‚û© *.·¥õ·¥õs*
> ‚îú‚û© *.Íú∞·¥Ä…¥·¥Ñ è*
> ‚îú‚û© *.·¥ú Ä ü*
> ‚îú‚û© *.s·¥á…¥·¥Ö…™·¥ç·¥Ä…¢·¥á*
> ‚îú‚û© *.A…¢·¥á*
> ‚îú‚û© *.C·¥è…¥·¥†·¥á Ä·¥õ*
> ‚îú‚û© *.·¥õ…™…¥ è*
> ‚îú‚û© *.·¥õ…¢s*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*`;
          break;
          
        case "3":
          menuTitle = "AI Menu";
          menuResponse = `
*\`·¥Ä…™-…¢·¥ò·¥õ-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *.…¢·¥ò·¥õ*
> ‚îú‚û© *.·¥Ä…™*
> ‚îú‚û© *.·¥Ä…¥·¥Ä ü ès·¥á*
> ‚îú‚û© *. ü ü·¥Ä·¥ç·¥Ä3*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*`;
          break;
          
        case "4":
          menuTitle = "Tools Menu";
          menuResponse = `
*\`…™…¥“ì·¥è-·¥ç·¥á…¥·¥ú\`*.  
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *.·¥Ä ô·¥è·¥ú·¥õ*
> ‚îú‚û© *.D·¥á·¥†*
> ‚îú‚û© *.·¥Ä ü…™·¥†·¥á*
> ‚îú‚û© *. Ä·¥á«´·¥ú·¥ás·¥õ*
> ‚îú‚û© *. ô·¥è·¥õ…™…¥Íú∞·¥è*
> ‚îú‚û© *.Íú±·¥õ·¥Ä·¥õ·¥úÍú±*
> ‚îú‚û© *.·¥ò…™…¥…¢*
> ‚îú‚û© *.·¥ò…™…¥…¢2*
> ‚îú‚û© *.Íú± èÍú±·¥õ·¥á·¥ç*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*`;
          break;
          
        case "5":
          menuTitle = "Group Menu";
          menuResponse = `
*\`…¢ Ä·¥è·¥ú·¥ò-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *. Ä·¥á·¥ç·¥è·¥†·¥á*
> ‚îú‚û© *.·¥Ö·¥á ü*
> ‚îú‚û© *.·¥Ä·¥Ö·¥Ö*
> ‚îú‚û© *.·¥ã…™·¥Ñ·¥ã*
> ‚îú‚û© *.·¥ã…™·¥Ñ·¥ã·¥Ä ü ü*
> ‚îú‚û© *.s·¥á·¥õ…¢·¥è·¥è·¥Ö ô è·¥á*
> ‚îú‚û© *.s·¥á·¥õ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á*
> ‚îú‚û© *.·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á*
> ‚îú‚û© *.·¥Ö·¥á·¥ç·¥è·¥õ·¥á*
> ‚îú‚û© *.·¥õ·¥Ä…¢·¥Ä ü ü*
> ‚îú‚û© *.…¢·¥á·¥õ·¥ò…™·¥Ñ*
> ‚îú‚û© *.…™…¥·¥†…™·¥õ·¥á*
> ‚îú‚û© *. Ä·¥á·¥†·¥è·¥ã·¥á*
> ‚îú‚û© *.·¥ò·¥è ü ü*
> ‚îú‚û© *. Ä·¥Ä…¥·¥Ö·¥è·¥çs ú…™·¥ò*
> ‚îú‚û© *.…¥·¥á·¥°…¢·¥Ñ*
> ‚îú‚û© *.·¥ä·¥è…™…¥ Ä·¥á«´·¥ú·¥ás·¥õs*
> ‚îú‚û© *.·¥Ä ü ü Ä·¥á«´*
> ‚îú‚û© *.·¥ç·¥ú·¥õ·¥á*
> ‚îú‚û© *.·¥ú…¥·¥ç·¥ú·¥õ·¥á*
> ‚îú‚û© *. ü·¥è·¥Ñ·¥ã…¢·¥Ñ*
> ‚îú‚û© *.·¥ú…¥ ü·¥è·¥Ñ·¥ã…¢·¥Ñ*
> ‚îú‚û© *. ü·¥á·¥Ä·¥†·¥á*
> ‚îú‚û© *.…¢…¥·¥Ä·¥ç·¥á*
> ‚îú‚û© *.…¢·¥Ö·¥ás·¥Ñ*
> ‚îú‚û© *.·¥ä·¥è…™…¥*
> ‚îú‚û© *. ú…™·¥Ö·¥á·¥õ·¥Ä…¢*
> ‚îú‚û© *.…¢…™…¥“ì·¥è*
> ‚îú‚û© *.·¥á·¥ò ú·¥á·¥ç·¥á Ä·¥Ä ü ·¥è…¥*
> ‚îú‚û© *.·¥á·¥ò ú·¥á·¥ç·¥á Ä·¥Ä ü ·¥è“ì“ì*
> ‚îú‚û© *.·¥á·¥ò ú·¥á·¥ç·¥á Ä·¥Ä ü 7·¥Ö 24 ú 90·¥Ö*
> ‚îú‚û© *.s·¥á…¥·¥Ö·¥Ö·¥ç*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*`;
          break;
          
        case "6":
          menuTitle = "Search Menu";
          menuResponse = `
*\`s·¥á·¥Ä Ä·¥Ñ ú-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *. è·¥õÍú±*
> ‚îú‚û© *. è·¥õ·¥Ä*
> ‚îú‚û© *.·¥ç·¥è·¥†…™·¥á…™…¥“ì·¥è*
> ‚îú‚û© *.·¥ç·¥è·¥†…™·¥á*
> ‚îú‚û© *.G·¥è·¥è…¢ ü·¥á*
> ‚îú‚û© *.·¥°·¥á·¥Ä·¥õ ú·¥á Ä*
> ‚îú‚û© *.s·¥õ…™·¥Ñ·¥ãs·¥á·¥Ä Ä·¥Ñ ú*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*`;
          break;
          
        case "7":
          menuTitle = "Main Menu";
          menuResponse = `
*\` ô·¥è·¥õ-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *.·¥†·¥á Äs…™·¥è…¥*
> ‚îú‚û© *.·¥ò Ä·¥á·¥ç…™·¥ú·¥ç*
> ‚îú‚û© *. Ä·¥á·¥ò·¥è*
> ‚îú‚û© *.·¥ç·¥á…¥·¥ú*
> ‚îú‚û© *.·¥Ñ ú·¥á·¥Ñ·¥ã·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á*
> ‚îú‚û© *.·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á*
> ‚îú‚û© *.·¥ç·¥è·¥Ö·¥á*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è·¥õ è·¥ò…™…¥…¢*
> ‚îú‚û© *.·¥Ä ü·¥°·¥Ä ès·¥è…¥ ü…™…¥·¥á*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥Ñ·¥è Ä·¥Ö…™…¥…¢*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥Ä·¥Ös·¥õ·¥Ä·¥õ·¥ús*
> ‚îú‚û© *.·¥Ä…¥·¥õ…™ ô·¥Ä·¥Ö*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥ès·¥õ…™·¥Ñ·¥ã·¥á Ä*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥ò ü è*
> ‚îú‚û© *.·¥Ä·¥ú·¥õ·¥è Ä·¥á·¥Ä·¥Ñ·¥õ*
> ‚îú‚û© *.·¥Ä…¥·¥õ…™ ü…™…¥·¥ã*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*`;
          break;
          
        case "8":
          menuTitle = "Owner Menu";
          menuResponse = `
*\`·¥è·¥°…¥·¥á Ä-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *.·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ñ·¥ç·¥Ö*
> ‚îú‚û© *.s·¥á·¥õ·¥õ…™…¥…¢s*
> ‚îú‚û© *.·¥è·¥°…¥·¥á Ä*
> ‚îú‚û© *. Ä·¥á·¥ò·¥è*
> ‚îú‚û© *.Íú± èÍú±·¥õ·¥á·¥ç*
> ‚îú‚û© *.Íú±·¥õ·¥Ä·¥õ·¥úÍú±*
> ‚îú‚û© *.A ô·¥è·¥ú·¥õ*
> ‚îú‚û© *. ô ü·¥è·¥Ñ·¥ã*
> ‚îú‚û© *.·¥á·¥†·¥Ä ü*
> ‚îú‚û© *.·¥ú…¥ ô ü·¥è·¥Ñ·¥ã*
> ‚îú‚û© *.s ú·¥ú·¥õ·¥Ö·¥è·¥°…¥*
> ‚îú‚û© *.·¥Ñ ü·¥á·¥Ä Ä·¥Ñ ú·¥Ä·¥õs*
> ‚îú‚û© *.s·¥á·¥õ·¥ò·¥ò*
> ‚îú‚û© *. ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ*
> ‚îú‚û© *.·¥ä…™·¥Ö*
> ‚îú‚û© *.…¢·¥ä…™·¥Ö*
> ‚îú‚û© *.·¥ò·¥Ä…™ Ä*
> ‚îú‚û© *.s·¥Ä·¥†·¥á*
> ‚îú‚û© *.·¥Ñ·¥Ä ü·¥Ñ*
> ‚îú‚û© *. Ä·¥áÍú±·¥õ·¥Ä Ä·¥õ*
> ‚îú‚û© *.s·¥á·¥õs·¥ú·¥Ö·¥è*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *2025 POWERED BY SKIDDYBMX*`;
          break;
          
        case "9":
          menuTitle = "Stalk Menu";
          menuResponse = `
*\` Ä·¥Ä…¥·¥Ö·¥è·¥ç-·¥ç·¥á…¥·¥ú\`*
> ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> ‚îú‚û© *.·¥Ö·¥è…¢*
> ‚îú‚û© *.·¥Ñ·¥Ä·¥õ*
> ‚îú‚û© *.·¥Ö…™·¥Ä Ä è*
> ‚îú‚û© *.·¥Ä…¥…™·¥ç·¥á*
> ‚îú‚û© *.·¥Ñ·¥è·¥ú·¥ò ü·¥á·¥ò·¥ò*
> ‚îú‚û© *.Íú∞…™…¥·¥Ö…¥·¥Ä·¥ç·¥á*
> ‚îú‚û© *. ü·¥è ü…™*
> ‚îú‚û© *.·¥°·¥Ä…™Íú∞·¥ú*
> ‚îú‚û© *.·¥Ñ·¥ès·¥ò ü·¥Ä è*
> ‚îú‚û© *.…¥·¥á·¥ã·¥è*
> ‚îú‚û© *. Ä·¥Ä…¥·¥Ö·¥è·¥ç·¥Ä…¥…™·¥ç·¥á*
> ‚îú‚û© *.S·¥á…¥·¥Ö…™·¥ç·¥Ä…¢·¥á*
> ‚îú‚û© *.·¥Ä…¥…™·¥ç·¥á…¢…™ Ä ü*
> ‚îú‚û© *.·¥Ä…¥…™·¥ç·¥á…¢…™ Ä ü1*
> ‚îú‚û© *.·¥Ä…¥…™·¥ç·¥á…¢…™ Ä ü2*
> ‚îú‚û© *.·¥Ä…¥…™·¥ç·¥á…¢…™ Ä ü3*
> ‚îú‚û© *.·¥Ä…¥…™·¥ç·¥á…¢…™ Ä ü4*
> ‚îú‚û© *.·¥Ä…¥…™·¥ç·¥á…¢…™ Ä ü5*
> ‚îú‚û© *.·¥ò…™·¥Ñ·¥ã·¥ú·¥ò ü…™…¥·¥á*
> ‚îï‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùç
> *¬©powered by SKIDDYBMX*`;
          break;
          
        default:
          menuTitle = "Invalid Choice";
          menuResponse = "*Invalid Reply Please Reply With A Number Between 1 to 9*";
      }

      // Format the full response with title and description
      const fullResponse = `
‚ï≠‚îÅ‚îÅ‚îÅ„Äî *${config.BOT_NAME} - ${menuTitle}* „Äï‚îÅ‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÉ‚òÖ‚îÇ‚Ä¢ Owner : *${config.OWNER_NAME}*
‚îÉ‚òÖ‚îÇ‚Ä¢ User : *${m.pushName}*
‚îÉ‚òÖ‚îÇ‚Ä¢ Prefix : [${prefix}]
‚îÉ‚òÖ‚îÇ‚Ä¢ Version : *1.0.0*
‚îÉ‚òÖ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑

${menuResponse}

> *${config.DESCRIPTION}*`;

      // Send the response with image and context info
      await Matrix.sendMessage(m.from, {
        image: menuImage,
        caption: fullResponse,
        contextInfo: {
          mentionedJid: [m.sender],
          forwardingScore: 999,
          isForwarded: true,
          forwardedNewsletterMessageInfo: {
            newsletterJid: '120363419079746471@newsletter',
            newsletterName: "SKIDDYBMX",
            serverMessageId: 143
          }
        }
      }, {
        quoted: receivedMessage
      });
    });
  }
};

export default menu;
